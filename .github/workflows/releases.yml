name: CICD

on:
  push:
    branches:
      - "!*"
    tags:
      - "v*.*.*"


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    
    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.0' # The Go version to download (if necessary) and use.
    
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        make dependencies
        
    # Run build of the application
    - name: Run build
      run: make linux-binaries
    
    - name: buildLinuxPackagesDEB
      uses: kentik/pkg@v1.0.0-rc7
      with:
        name: cron-job
        version: ${{ env.RELEASE_VERSION }}
        arch: x86_64
        format: deb
        package: package.yaml

    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ env.RELEASE_VERSION }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: cron-job_${{ env.RELEASE_VERSION }}-1_amd64.deb
        asset_name: cron-job_${{ env.RELEASE_VERSION }}-1_amd64.deb
        asset_content_type: application/vnd.debian.binary-package
